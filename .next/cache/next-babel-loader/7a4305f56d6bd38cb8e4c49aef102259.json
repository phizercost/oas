{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { Form, Input, Message, Button } from \"semantic-ui-react\";\nimport Auction from \"../ethereum/auction\";\nimport web3 from \"../ethereum/web3\";\nimport { Router } from \"../routes\";\n\nclass BidForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      value: \"\",\n      errorMessage: \"\",\n      loading: false\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      const auction = Auction(this.props.address);\n      this.setState({\n        loading: true,\n        errorMessage: \"\"\n      });\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        await auction.methods.bid().send({\n          from: accounts[0],\n          value: web3.utils.toWei(this.state.value, \"ether\")\n        });\n        Router.replaceRoute(`/auctions/${this.props.address}`);\n      } catch (err) {\n        this.setState({\n          errorMessage: err.message\n        });\n      }\n\n      this.setState({\n        loading: false,\n        value: \"\"\n      });\n    });\n  }\n\n  render() {\n    return __jsx(Form, {\n      onSubmit: this.onSubmit,\n      error: !!this.state.errorMessage\n    }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Amount to Bid\"), __jsx(Input, {\n      label: \"ether\",\n      labelPosition: \"right\",\n      value: this.state.value,\n      onChange: event => this.setState({\n        value: event.target.value\n      })\n    }), __jsx(Message, {\n      error: true,\n      header: \"Ooops!\",\n      content: this.state.errorMessage\n    })), __jsx(Button, {\n      secondary: true,\n      loading: this.state.loading\n    }, \"Bid!\"));\n  }\n\n}\n\nexport default BidForm;","map":{"version":3,"sources":["/Users/cost/Google Drive/Cost Pro/Perso/Research/oas/components/BidForm.js"],"names":["React","Component","Form","Input","Message","Button","Auction","web3","Router","BidForm","value","errorMessage","loading","event","preventDefault","auction","props","address","setState","accounts","eth","getAccounts","methods","bid","send","from","utils","toWei","state","replaceRoute","err","message","render","onSubmit","target"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,OAAtB,EAA+BC,MAA/B,QAA6C,mBAA7C;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAASC,MAAT,QAAuB,WAAvB;;AAEA,MAAMC,OAAN,SAAsBR,SAAtB,CAAgC;AAAA;AAAA;;AAAA,mCACtB;AACNS,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,YAAY,EAAE,EAFR;AAGNC,MAAAA,OAAO,EAAE;AAHH,KADsB;;AAAA,sCAOnB,MAAMC,KAAN,IAAe;AACxBA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAMC,OAAO,GAAGT,OAAO,CAAC,KAAKU,KAAL,CAAWC,OAAZ,CAAvB;AACA,WAAKC,QAAL,CAAc;AAAEN,QAAAA,OAAO,EAAE,IAAX;AAAiBD,QAAAA,YAAY,EAAE;AAA/B,OAAd;;AACA,UAAI;AACF,cAAMQ,QAAQ,GAAG,MAAMZ,IAAI,CAACa,GAAL,CAASC,WAAT,EAAvB;AACA,cAAMN,OAAO,CAACO,OAAR,CAAgBC,GAAhB,GAAsBC,IAAtB,CAA2B;AAC/BC,UAAAA,IAAI,EAAEN,QAAQ,CAAC,CAAD,CADiB;AAE/BT,UAAAA,KAAK,EAAEH,IAAI,CAACmB,KAAL,CAAWC,KAAX,CAAiB,KAAKC,KAAL,CAAWlB,KAA5B,EAAmC,OAAnC;AAFwB,SAA3B,CAAN;AAIAF,QAAAA,MAAM,CAACqB,YAAP,CAAqB,aAAY,KAAKb,KAAL,CAAWC,OAAQ,EAApD;AACD,OAPD,CAOE,OAAOa,GAAP,EAAY;AACZ,aAAKZ,QAAL,CAAc;AAAEP,UAAAA,YAAY,EAAEmB,GAAG,CAACC;AAApB,SAAd;AACD;;AACD,WAAKb,QAAL,CAAc;AAAEN,QAAAA,OAAO,EAAE,KAAX;AAAkBF,QAAAA,KAAK,EAAE;AAAzB,OAAd;AACD,KAtB6B;AAAA;;AAuB9BsB,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKC,QAArB;AAA+B,MAAA,KAAK,EAAE,CAAC,CAAC,KAAKL,KAAL,CAAWjB;AAAnD,OACE,MAAC,IAAD,CAAM,KAAN,QACE,qCADF,EAEE,MAAC,KAAD;AACE,MAAA,KAAK,EAAC,OADR;AAEE,MAAA,aAAa,EAAC,OAFhB;AAGE,MAAA,KAAK,EAAE,KAAKiB,KAAL,CAAWlB,KAHpB;AAIE,MAAA,QAAQ,EAAEG,KAAK,IAAI,KAAKK,QAAL,CAAc;AAAER,QAAAA,KAAK,EAAEG,KAAK,CAACqB,MAAN,CAAaxB;AAAtB,OAAd;AAJrB,MAFF,EAQE,MAAC,OAAD;AAAS,MAAA,KAAK,MAAd;AAAe,MAAA,MAAM,EAAC,QAAtB;AAA+B,MAAA,OAAO,EAAE,KAAKkB,KAAL,CAAWjB;AAAnD,MARF,CADF,EAWE,MAAC,MAAD;AAAQ,MAAA,SAAS,MAAjB;AAAkB,MAAA,OAAO,EAAE,KAAKiB,KAAL,CAAWhB;AAAtC,cAXF,CADF;AAiBD;;AAzC6B;;AA4ChC,eAAeH,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Input, Message, Button } from \"semantic-ui-react\";\nimport Auction from \"../ethereum/auction\";\nimport web3 from \"../ethereum/web3\";\nimport { Router } from \"../routes\";\n\nclass BidForm extends Component {\n  state = {\n    value: \"\",\n    errorMessage: \"\",\n    loading: false\n  };\n\n  onSubmit = async event => {\n    event.preventDefault();\n    const auction = Auction(this.props.address);\n    this.setState({ loading: true, errorMessage: \"\" });\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await auction.methods.bid().send({\n        from: accounts[0],\n        value: web3.utils.toWei(this.state.value, \"ether\")\n      });\n      Router.replaceRoute(`/auctions/${this.props.address}`);\n    } catch (err) {\n      this.setState({ errorMessage: err.message });\n    }\n    this.setState({ loading: false, value: \"\" });\n  };\n  render() {\n    return (\n      <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n        <Form.Field>\n          <label>Amount to Bid</label>\n          <Input\n            label=\"ether\"\n            labelPosition=\"right\"\n            value={this.state.value}\n            onChange={event => this.setState({ value: event.target.value })}\n          />\n          <Message error header=\"Ooops!\" content={this.state.errorMessage} />\n        </Form.Field>\n        <Button secondary loading={this.state.loading}>\n          Bid!\n        </Button>\n      </Form>\n    );\n  }\n}\n\nexport default BidForm;\n"]},"metadata":{},"sourceType":"module"}