{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport { Form, Button, Message, Input } from \"semantic-ui-react\";\nimport React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\"; //To get the main layout\n\nimport factory from \"../../ethereum/factory\";\nimport web3 from \"../../ethereum/web3\";\nimport { Router } from '../../routes';\n\nfunction dateToSeconds(date) {\n  var dateD = new Date(date);\n  var seconds = dateD.getTime() / 1000;\n  return seconds;\n}\n\nvar AuctionNew =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AuctionNew, _Component);\n\n  function AuctionNew() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AuctionNew);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AuctionNew)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      minimumBid: \"\",\n      startDate: \"\",\n      endDate: \"\",\n      title: \"\",\n      description: \"\",\n      errorMessage: \"\",\n      loading: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", function _callee(event) {\n      var accounts;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault(); //prevent submitting the form\n\n              _this.setState({\n                loading: true,\n                errorMessage: ''\n              });\n\n              _context.prev = 2;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n            case 5:\n              accounts = _context.sent;\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(factory.methods.createAuction(_this.state.minimumBid, dateToSeconds(_this.state.startDate), dateToSeconds(_this.state.endDate), _this.state.title, _this.state.description).send({\n                from: accounts[0]\n              }));\n\n            case 8:\n              Router.pushRoute('/');\n              _context.next = 15;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](2);\n\n              _this.setState({\n                errorMessage: _context.t0.message\n              });\n\n              _this.setState({\n                loading: false\n              });\n\n            case 15:\n              _this.setState({\n                loading: false\n              });\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[2, 11]]);\n    });\n\n    return _this;\n  }\n\n  _createClass(AuctionNew, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Layout, null, __jsx(\"h3\", null, \"Create an auction\"), __jsx(Form, {\n        onSubmit: this.onSubmit,\n        error: !!this.state.errorMessage\n      }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Minimum starting bid\"), __jsx(Input, {\n        label: \"Ether\",\n        labelPosition: \"right\",\n        value: this.state.minimumBid,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            minimumBid: event.target.value\n          });\n        }\n      })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Start Date\"), __jsx(Input, {\n        label: \"YYYY-MM-DD\",\n        labelPosition: \"right\",\n        value: this.state.startDate,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            startDate: event.target.value\n          });\n        }\n      })), __jsx(Form.Field, null, __jsx(\"label\", null, \"End Date\"), __jsx(Input, {\n        label: \"YYYY-MM-DD\",\n        labelPosition: \"right\",\n        value: this.state.endDate,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            endDate: event.target.value\n          });\n        }\n      })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Title\"), __jsx(Input, {\n        value: this.state.title,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            title: event.target.value\n          });\n        }\n      })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Description\"), __jsx(Input, {\n        value: this.state.description,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            description: event.target.value\n          });\n        }\n      })), __jsx(Message, {\n        error: true,\n        header: \"ERROR\",\n        content: this.state.errorMessage\n      }), __jsx(Button, {\n        loading: this.state.loading,\n        secondary: true\n      }, \"Create!\")));\n    }\n  }]);\n\n  return AuctionNew;\n}(Component);\n\nexport default AuctionNew;","map":{"version":3,"sources":["/Users/cost/Google Drive/Cost Pro/Perso/Research/oas/pages/auctions/new.js"],"names":["Form","Button","Message","Input","React","Component","Layout","factory","web3","Router","dateToSeconds","date","dateD","Date","seconds","getTime","AuctionNew","minimumBid","startDate","endDate","title","description","errorMessage","loading","event","preventDefault","setState","eth","getAccounts","accounts","methods","createAuction","state","send","from","pushRoute","message","onSubmit","target","value"],"mappings":";;;;;;;;;AAAA,SAASA,IAAT,EAAeC,MAAf,EAAuBC,OAAvB,EAAgCC,KAAhC,QAA6C,mBAA7C;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,yBAAnB,C,CAA8C;;AAC9C,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,SAAQC,MAAR,QAAqB,cAArB;;AAGA,SAASC,aAAT,CAAuBC,IAAvB,EAA4B;AAC1B,MAAIC,KAAK,GAAG,IAAIC,IAAJ,CAASF,IAAT,CAAZ;AACA,MAAIG,OAAO,GAAGF,KAAK,CAACG,OAAN,KAAkB,IAAhC;AACA,SAAOD,OAAP;AACD;;IAGKE,U;;;;;;;;;;;;;;;;;;4DACI;AACNC,MAAAA,UAAU,EAAE,EADN;AAENC,MAAAA,SAAS,EAAE,EAFL;AAGNC,MAAAA,OAAO,EAAE,EAHH;AAINC,MAAAA,KAAK,EAAE,EAJD;AAKNC,MAAAA,WAAW,EAAE,EALP;AAMNC,MAAAA,YAAY,EAAE,EANR;AAONC,MAAAA,OAAO,EAAE;AAPH,K;;+DASG,iBAAMC,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACTA,cAAAA,KAAK,CAACC,cAAN,GADS,CACe;;AACxB,oBAAKC,QAAL,CAAc;AAAEH,gBAAAA,OAAO,EAAE,IAAX;AAAiBD,gBAAAA,YAAY,EAAE;AAA/B,eAAd;;AAFS;AAAA;AAAA,+CAKgBd,IAAI,CAACmB,GAAL,CAASC,WAAT,EALhB;;AAAA;AAKDC,cAAAA,QALC;AAAA;AAAA,+CAMDtB,OAAO,CAACuB,OAAR,CACHC,aADG,CAEF,MAAKC,KAAL,CAAWf,UAFT,EAGFP,aAAa,CAAC,MAAKsB,KAAL,CAAWd,SAAZ,CAHX,EAIFR,aAAa,CAAC,MAAKsB,KAAL,CAAWb,OAAZ,CAJX,EAKF,MAAKa,KAAL,CAAWZ,KALT,EAMF,MAAKY,KAAL,CAAWX,WANT,EAQHY,IARG,CAQE;AACJC,gBAAAA,IAAI,EAAEL,QAAQ,CAAC,CAAD;AADV,eARF,CANC;;AAAA;AAiBLpB,cAAAA,MAAM,CAAC0B,SAAP,CAAiB,GAAjB;AAjBK;AAAA;;AAAA;AAAA;AAAA;;AAmBL,oBAAKT,QAAL,CAAc;AAAEJ,gBAAAA,YAAY,EAAE,YAAMc;AAAtB,eAAd;;AACA,oBAAKV,QAAL,CAAc;AAAEH,gBAAAA,OAAO,EAAE;AAAX,eAAd;;AApBK;AAsBT,oBAAKG,QAAL,CAAc;AAAEH,gBAAAA,OAAO,EAAE;AAAX,eAAd;;AAtBS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;6BAwBF;AAAA;;AACP,aACE,MAAC,MAAD,QACE,sCADF,EAEE,MAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKc,QAArB;AAA+B,QAAA,KAAK,EAAE,CAAC,CAAC,KAAKL,KAAL,CAAWV;AAAnD,SACE,MAAC,IAAD,CAAM,KAAN,QACE,4CADF,EAEE,MAAC,KAAD;AACE,QAAA,KAAK,EAAC,OADR;AAEE,QAAA,aAAa,EAAC,OAFhB;AAGE,QAAA,KAAK,EAAE,KAAKU,KAAL,CAAWf,UAHpB;AAIE,QAAA,QAAQ,EAAE,kBAAAO,KAAK;AAAA,iBACb,MAAI,CAACE,QAAL,CAAc;AAAET,YAAAA,UAAU,EAAEO,KAAK,CAACc,MAAN,CAAaC;AAA3B,WAAd,CADa;AAAA;AAJjB,QAFF,CADF,EAYE,MAAC,IAAD,CAAM,KAAN,QACE,kCADF,EAEE,MAAC,KAAD;AACE,QAAA,KAAK,EAAC,YADR;AAEE,QAAA,aAAa,EAAC,OAFhB;AAGE,QAAA,KAAK,EAAE,KAAKP,KAAL,CAAWd,SAHpB;AAIE,QAAA,QAAQ,EAAE,kBAAAM,KAAK;AAAA,iBACb,MAAI,CAACE,QAAL,CAAc;AAAER,YAAAA,SAAS,EAAEM,KAAK,CAACc,MAAN,CAAaC;AAA1B,WAAd,CADa;AAAA;AAJjB,QAFF,CAZF,EAuBE,MAAC,IAAD,CAAM,KAAN,QACE,gCADF,EAEE,MAAC,KAAD;AACE,QAAA,KAAK,EAAC,YADR;AAEE,QAAA,aAAa,EAAC,OAFhB;AAGE,QAAA,KAAK,EAAE,KAAKP,KAAL,CAAWb,OAHpB;AAIE,QAAA,QAAQ,EAAE,kBAAAK,KAAK;AAAA,iBAAI,MAAI,CAACE,QAAL,CAAc;AAAEP,YAAAA,OAAO,EAAEK,KAAK,CAACc,MAAN,CAAaC;AAAxB,WAAd,CAAJ;AAAA;AAJjB,QAFF,CAvBF,EAgCE,MAAC,IAAD,CAAM,KAAN,QACE,6BADF,EAEE,MAAC,KAAD;AACE,QAAA,KAAK,EAAE,KAAKP,KAAL,CAAWZ,KADpB;AAEE,QAAA,QAAQ,EAAE,kBAAAI,KAAK;AAAA,iBAAI,MAAI,CAACE,QAAL,CAAc;AAAEN,YAAAA,KAAK,EAAEI,KAAK,CAACc,MAAN,CAAaC;AAAtB,WAAd,CAAJ;AAAA;AAFjB,QAFF,CAhCF,EAuCE,MAAC,IAAD,CAAM,KAAN,QACE,mCADF,EAEE,MAAC,KAAD;AACE,QAAA,KAAK,EAAE,KAAKP,KAAL,CAAWX,WADpB;AAEE,QAAA,QAAQ,EAAE,kBAAAG,KAAK;AAAA,iBACb,MAAI,CAACE,QAAL,CAAc;AAAEL,YAAAA,WAAW,EAAEG,KAAK,CAACc,MAAN,CAAaC;AAA5B,WAAd,CADa;AAAA;AAFjB,QAFF,CAvCF,EAgDE,MAAC,OAAD;AAAS,QAAA,KAAK,MAAd;AAAe,QAAA,MAAM,EAAC,OAAtB;AAA8B,QAAA,OAAO,EAAE,KAAKP,KAAL,CAAWV;AAAlD,QAhDF,EAiDE,MAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKU,KAAL,CAAWT,OAA5B;AAAqC,QAAA,SAAS;AAA9C,mBAjDF,CAFF,CADF;AAwDD;;;;EA3FsBlB,S;;AA8FzB,eAAeW,UAAf","sourcesContent":["import { Form, Button, Message, Input } from \"semantic-ui-react\";\nimport React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\"; //To get the main layout\nimport factory from \"../../ethereum/factory\";\nimport web3 from \"../../ethereum/web3\";\nimport {Router} from '../../routes';\n\n\nfunction dateToSeconds(date){\n  let dateD = new Date(date);\n  let seconds = dateD.getTime() / 1000; \n  return seconds;\n}\n\n\nclass AuctionNew extends Component {\n  state = {\n    minimumBid: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    title: \"\",\n    description: \"\",\n    errorMessage: \"\",\n    loading: false\n  };\n  onSubmit = async event => {\n    event.preventDefault(); //prevent submitting the form\n    this.setState({ loading: true, errorMessage: '' });\n    try {\n      //import the create auction\n      const accounts = await web3.eth.getAccounts();\n      await factory.methods\n        .createAuction(\n          this.state.minimumBid,\n          dateToSeconds(this.state.startDate),\n          dateToSeconds(this.state.endDate),\n          this.state.title,\n          this.state.description\n        )\n        .send({\n          from: accounts[0]\n        });\n        Router.pushRoute('/');\n    } catch (error) {\n        this.setState({ errorMessage: error.message });\n        this.setState({ loading: false });\n    }\n    this.setState({ loading: false });\n  };\n  render() {\n    return (\n      <Layout>\n        <h3>Create an auction</h3>\n        <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n          <Form.Field>\n            <label>Minimum starting bid</label>\n            <Input\n              label=\"Ether\"\n              labelPosition=\"right\"\n              value={this.state.minimumBid}\n              onChange={event =>\n                this.setState({ minimumBid: event.target.value })\n              }\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Start Date</label>\n            <Input\n              label=\"YYYY-MM-DD\"\n              labelPosition=\"right\"\n              value={this.state.startDate}\n              onChange={event =>\n                this.setState({ startDate: event.target.value })\n              }\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>End Date</label>\n            <Input\n              label=\"YYYY-MM-DD\"\n              labelPosition=\"right\"\n              value={this.state.endDate}\n              onChange={event => this.setState({ endDate: event.target.value })}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Title</label>\n            <Input\n              value={this.state.title}\n              onChange={event => this.setState({ title: event.target.value })}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Description</label>\n            <Input\n              value={this.state.description}\n              onChange={event =>\n                this.setState({ description: event.target.value })\n              }\n            />\n          </Form.Field>\n          <Message error header=\"ERROR\" content={this.state.errorMessage}/>\n          <Button loading={this.state.loading} secondary>Create!</Button>\n        </Form>\n      </Layout>\n    );\n  }\n}\n\nexport default AuctionNew;\n"]},"metadata":{},"sourceType":"module"}