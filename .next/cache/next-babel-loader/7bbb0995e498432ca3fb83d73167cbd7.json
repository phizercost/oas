{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport { Form, Button, Message, Input } from \"semantic-ui-react\";\nimport React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\"; //To get the main layout\n\nimport factory from \"../../ethereum/factory\";\nimport web3 from \"../../ethereum/web3\";\nimport { Router } from '../../routes';\n\nfunction dateToSeconds(date) {\n  let dateD = new Date(date);\n  let seconds = dateD.getTime() / 1000;\n  return seconds;\n}\n\nclass AuctionNew extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      minimumBid: \"\",\n      startDate: \"\",\n      endDate: \"\",\n      title: \"\",\n      description: \"\",\n      errorMessage: \"\",\n      loading: false\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault(); //prevent submitting the form\n\n      this.setState({\n        loading: true,\n        errorMessage: ''\n      });\n\n      try {\n        //import the create auction\n        const accounts = await web3.eth.getAccounts();\n        await factory.methods.createAuction(this.state.minimumBid, dateToSeconds(this.state.startDate), dateToSeconds(this.state.endDate), this.state.title, this.state.description).send({\n          from: accounts[0]\n        });\n        Router.pushRoute('/');\n      } catch (error) {\n        this.setState({\n          errorMessage: error.message\n        });\n        this.setState({\n          loading: false\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(\"h3\", null, \"Create an auction\"), __jsx(Form, {\n      onSubmit: this.onSubmit,\n      error: !!this.state.errorMessage\n    }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Minimum starting bid\"), __jsx(Input, {\n      label: \"Ether\",\n      labelPosition: \"right\",\n      value: this.state.minimumBid,\n      onChange: event => this.setState({\n        minimumBid: event.target.value\n      })\n    })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Start Date\"), __jsx(Input, {\n      label: \"YYYY-MM-DD\",\n      labelPosition: \"right\",\n      value: this.state.startDate,\n      onChange: event => this.setState({\n        startDate: event.target.value\n      })\n    })), __jsx(Form.Field, null, __jsx(\"label\", null, \"End Date\"), __jsx(Input, {\n      label: \"YYYY-MM-DD\",\n      labelPosition: \"right\",\n      value: this.state.endDate,\n      onChange: event => this.setState({\n        endDate: event.target.value\n      })\n    })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Title\"), __jsx(Input, {\n      value: this.state.title,\n      onChange: event => this.setState({\n        title: event.target.value\n      })\n    })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Description\"), __jsx(Input, {\n      value: this.state.description,\n      onChange: event => this.setState({\n        description: event.target.value\n      })\n    })), __jsx(Message, {\n      error: true,\n      header: \"ERROR\",\n      content: this.state.errorMessage\n    }), __jsx(Button, {\n      loading: this.state.loading,\n      secondary: true\n    }, \"Create!\")));\n  }\n\n}\n\nexport default AuctionNew;","map":{"version":3,"sources":["/Users/cost/Google Drive/Cost Pro/Perso/Research/oas/pages/auctions/new.js"],"names":["Form","Button","Message","Input","React","Component","Layout","factory","web3","Router","dateToSeconds","date","dateD","Date","seconds","getTime","AuctionNew","minimumBid","startDate","endDate","title","description","errorMessage","loading","event","preventDefault","setState","accounts","eth","getAccounts","methods","createAuction","state","send","from","pushRoute","error","message","render","onSubmit","target","value"],"mappings":"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","sourcesContent":["import { Form, Button, Message, Input } from \"semantic-ui-react\";\nimport React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\"; //To get the main layout\nimport factory from \"../../ethereum/factory\";\nimport web3 from \"../../ethereum/web3\";\nimport {Router} from '../../routes';\n\n\nfunction dateToSeconds(date){\n  let dateD = new Date(date);\n  let seconds = dateD.getTime() / 1000; \n  return seconds;\n}\n\n\nclass AuctionNew extends Component {\n  state = {\n    minimumBid: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    title: \"\",\n    description: \"\",\n    errorMessage: \"\",\n    loading: false\n  };\n  onSubmit = async event => {\n    event.preventDefault(); //prevent submitting the form\n    this.setState({ loading: true, errorMessage: '' });\n    try {\n      //import the create auction\n      const accounts = await web3.eth.getAccounts();\n      await factory.methods\n        .createAuction(\n          this.state.minimumBid,\n          dateToSeconds(this.state.startDate),\n          dateToSeconds(this.state.endDate),\n          this.state.title,\n          this.state.description\n        )\n        .send({\n          from: accounts[0]\n        });\n        Router.pushRoute('/');\n    } catch (error) {\n        this.setState({ errorMessage: error.message });\n        this.setState({ loading: false });\n    }\n    this.setState({ loading: false });\n  };\n  render() {\n    return (\n      <Layout>\n        <h3>Create an auction</h3>\n        <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n          <Form.Field>\n            <label>Minimum starting bid</label>\n            <Input\n              label=\"Ether\"\n              labelPosition=\"right\"\n              value={this.state.minimumBid}\n              onChange={event =>\n                this.setState({ minimumBid: event.target.value })\n              }\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Start Date</label>\n            <Input\n              label=\"YYYY-MM-DD\"\n              labelPosition=\"right\"\n              value={this.state.startDate}\n              onChange={event =>\n                this.setState({ startDate: event.target.value })\n              }\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>End Date</label>\n            <Input\n              label=\"YYYY-MM-DD\"\n              labelPosition=\"right\"\n              value={this.state.endDate}\n              onChange={event => this.setState({ endDate: event.target.value })}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Title</label>\n            <Input\n              value={this.state.title}\n              onChange={event => this.setState({ title: event.target.value })}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Description</label>\n            <Input\n              value={this.state.description}\n              onChange={event =>\n                this.setState({ description: event.target.value })\n              }\n            />\n          </Form.Field>\n          <Message error header=\"ERROR\" content={this.state.errorMessage}/>\n          <Button loading={this.state.loading} secondary>Create!</Button>\n        </Form>\n      </Layout>\n    );\n  }\n}\n\nexport default AuctionNew;\n"]},"metadata":{},"sourceType":"module"}